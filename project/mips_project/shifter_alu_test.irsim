# Basic IRSIM test file shell for ECE 425 Lab 4.

# In order to ensure that your layout will be testable by the instructors,
# make sure that you can source this file without any errors, especially
# errors for unknown node names.  The remainder of the file may or may not
# be useful for your own testing.

# Basic setup.
l gnd!
h vdd!
l less
stepsize 100
logfile alu.log

# Set up the vectors.
vector A a7 a6 a5 a4 a3 a2 a1 a0
vector Shamt Shamt_2 Shamt_1 Shamt_0
vector Y Y7 Y6 Y5 Y4 Y3 Y2 Y1 Y0

vector op op6 op5 op4 op3 op2 op1 op0
vector opmux4 op1 op0
vector alu_a alu_a7 alu_a6 alu_a5 alu_a4 alu_a3 alu_a2 alu_a1 alu_a0
vector b a7 a6 a5 a4 a3 a2 a1 a0
vector result result7 result6 result5 result4 result3 result2 result1 result0

# Add the top-level signals to the watch list.  This causes theie values to be
# displayed after each step.
w op a b result zero  result7 result0


#
# A sample test; you will need a few more ...
#

# AND1 #1
setvector op 0001001
setvector alu_a 01010101
setvector b 11111111
s
assert result 01010101

# AND2 #2
setvector op 0001001
setvector alu_a 01010101
setvector b 10101010
s
assert result 00000000

# AND3 #3
setvector op 0001001
setvector alu_a 11111001
setvector b 00001001
s
assert result 00001001


# OR1 #4
setvector op 0111001
setvector alu_a 01010101
setvector b 11111111
s
assert result 11111111

# OR2 #5
setvector op 0111001
setvector alu_a 01010101
setvector b 00000010
s
assert result 01010111

# OR3 #6
setvector op 0111001
setvector alu_a 00001111
setvector b 11001111
s
assert result 11001111

# NOR1 #7
setvector op 1000001
setvector alu_a 00001111
setvector b 11001111
s
assert result 00110000

# NOR2 #8
setvector op 1000001
setvector alu_a 01010101
setvector b 00000010
s
assert result 10101000

# NOR3 #9
setvector op 1000001
setvector alu_a 00001111
setvector b 11111111
s
assert result 00000000

# XOR1 #10
setvector op 0110001
setvector alu_a 01010101
setvector b 11111111
s
assert result 10101010

# XOR2 #11
setvector op 0110001
setvector alu_a 01010101
setvector b 11110000
s
assert result 10100101

# XOR3 #12
setvector op 0110001
setvector alu_a 11110000
setvector b 11111111
s
assert result 00001111

# ADD1 #13
setvector op 0101000
setvector alu_a 01110000
setvector b 01111111
s
assert result 11101111

# ADD2 #14
setvector op 0101000
setvector alu_a 00001010
setvector b 01101000
s
assert result 01110010

# ADD3 #15
setvector op 0101000
setvector alu_a 00001010
setvector b 01111111
s
assert result 10001001

# sub1 #16
setvector op 1010100
setvector alu_a 01111111
setvector b 00001010
s
assert result 01110101

# sub2 #17
setvector op 1010100
setvector alu_a 00001111
setvector b 00001010
s
assert result 00000101

# sub3 #18
setvector op 1010100
setvector alu_a 01111000
setvector b 00001010
s
assert result 01101110

# SLT1 #19
setvector op 1010110
setvector alu_a 01111000
setvector b 00001010
s
assert result 00000000

# SLT2 #20
setvector op 1010110
setvector alu_a 00001111
setvector b 00001010
s
assert result 00000000

# SLT3 #21
setvector op 1010110
setvector alu_a 00000000
setvector b 00001010
s
assert result 00000001

# SLT4
setvector op 1010110
setvector alu_a 00000101
setvector b 00101010
s
assert result 00000001

# SLT5
setvector op 1010110
setvector alu_a 11111111
setvector b 00000000
s
assert result 00000000

# SLT6
setvector op 1010110
setvector alu_a 00000000
setvector b 11111111
s
assert result 00000001

# SLT7
setvector op 1010110
setvector alu_a 11111110
setvector b 11111111
s
assert result 00000001

# SLT8
setvector op 1010110
setvector alu_a 11111111
setvector b 11111111
s
assert result 00000000

# SLT9
setvector op 1010110
setvector alu_a 00000000
setvector b 00000000
s
assert result 00000000


#LOOKING AT RESULT SINCE SHIFTER IS CONNECTED TO ALU MUX4
#SHIFTER TESTS, OP1 & OP0 ARE HIGH
setvector opmux4 11


# shift left 1
setvector A 11111111
setvector Shamt 001
h right
l arith
s
assert result 01111111

# shift left 1
setvector A 00001111
setvector Shamt 001
l right
l arith
s
assert result 00011110

# shift left 2
setvector A 00001111
setvector Shamt 010
l right
l arith
s
assert result 00111100

# shift left 2
setvector A 00000011
setvector Shamt 010
l right
l arith
s
assert result 00001100


# shift left 4
setvector A 00001111
setvector Shamt 100
l right
l arith
s
assert result 11110000

# shift left 4
setvector A 00000011
setvector Shamt 100
l right
l arith
s
assert result 00110000

# shift left 5
setvector A 10101111
setvector Shamt 101
l right
l arith
s
assert result 11100000


# shift right 1
setvector A 10101111
setvector Shamt 001
h right
l arith
s
assert result 01010111

# shift right 2
setvector A 10101111
setvector Shamt 010
h right
l arith
s
assert result 00101011

# shift right 2
setvector A 10110011
setvector Shamt 010
h right
l arith
s
assert result 	00101100

# shift right 4
setvector A 00001111
setvector Shamt 100
h right
l arith
s
assert result 00000000

# shift right 4
setvector A 10110011
setvector Shamt 100
h right
l arith
s
assert result 00001011

# arith shift right 1
setvector A 10101111
setvector Shamt 001
h right
h arith
s
assert result 11010111

# arith shift right 2
setvector A 10101111
setvector Shamt 010
h right
h arith
s
assert result 11101011

# arith shift right 2
setvector A 10110011
setvector Shamt 010
h right
h arith
s
assert result 11101100

# arith shift right 4
setvector A 10101111
setvector Shamt 100
h right
h arith
s
assert result 11111010

# arith shift right 4
setvector A 10110011
setvector Shamt 100
h right
h arith
s
assert result 11111011
